name: Deploy to Surge

on:
  push:
    branches:
      - main
      - '*'
      - '**'
    tags:
      - "*"
      - "**"
  #  pull_request: #FIXME: remove after testing
  #    branches: [ "main" ]

  workflow_dispatch:



concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: surge

    env:
      env: ${{secrets.ENV}}
      domain: ${{ github.ref.split('/')[2] }}-aichats.surge.sh

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Get npm cache
        id: npm-cache
        run: echo "NPM_CACHE_DIR=$(pwd)/node_modules" >> "${GITHUB_OUTPUT}"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache.outputs.NPM_CACHE_DIR }}
          key: npm-${{github.workflow}}-${{ runner.os }}-${{ hashFiles('**package.json') }}
          restore-keys: |
            npm-${{github.workflow}}-${{ runner.os }}-${{ hashFiles('**package.json') }}

      - name: Write environment
        run: |
          echo $env > .env
          sed -i 's/ /\n/g' .env
          source .env

      - name: Install dependencies
        run: npm install --include=dev

      - name: Build
        run: npm run build

      - name: Deploy to ${{env.domain}}
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${{env.domain}}
          project: './build'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}

      - name: Deploy to aichats.surge.sh
        if: ${{ startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main' }}
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: 'aichats.surge.sh'
          project: './build'
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}


